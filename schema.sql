create extension if not exists postgis;

drop table if exists od cascade;
create table od (
    od_id serial primary key,
    age int,
    clone int,
    ipere int,
    --steps
    scnref int,
    scntod int,
    dsp_id int,
    facmen real,
    gender text,
    -- origin
    status text,
    scncent int,
    scnpmad int,
    message text,
    weekday text,
    activity text,
    facper06 real,
    facper08 real,
    age_group text,
    clonepmad int,
    in_cent31 int,
    person_id int,
    occupation text,
    arrivaltime text,
    clonetod100 int,
    --destination
    fac31ref123 real,
    fac31cent123 real,
    household_id int,
    intod31_pmad int,
    declared_mode text,
    departuretime text,
    fac31tod123pc real,
    fac31cent123p real,
    fac31pmad123pc real,
    household_size int,
    intod31_tod100  int,
    averagespeedkmh real,
    sequence_in_day int,
    household_income text,
    numberofboardings int,
    numberoftransfers int,
    arrivaltimeseconds int,
    transit_pass_owner bool,
    totaldistancemeters int,
    bird_distance_meters int,
    departuretimeseconds int,
    household_car_number int,
    driving_license_owner bool,
    totaltraveltimeminutes int,
    totaltraveltimeseconds int,
    accesstraveltimeminutes int,
    accesstraveltimeseconds int,
    egresstraveltimeminutes int,
    egresstraveltimeseconds int,
    firstwaitingtimeminutes int,
    firstwaitingtimeseconds int,
    totalwaitingtimeminutes int,
    totalwaitingtimeseconds int,
    totalinvehicletimeminutes int,
    totalinvehicletimeseconds int,
    transferwaitingtimeminutes int,
    transferwaitingtimeseconds int,
    transferwalkingtimeminutes int,
    transferwalkingtimeseconds int,
    cycling_travel_time_seconds int,
    driving_travel_time_seconds int,
    walking_travel_time_seconds int,
    minimizedtotaltraveltimeminutes int,
    minimizedtotaltraveltimeseconds int,
    totalnontransittraveltimeminutes int,
    totalnontransittraveltimeseconds int,
    averagespeedwithoutfirstwaitingkmh real,
    departuretimetominimizefirstwaitingtime text,
    minimumwaitingtimebeforeeachboardingminutes int,
    minimumwaitingtimebeforeeachboardingseconds int,
    departuretimesecondstominimizefirstwaitingtime int,
    hredep int,
    nodep int,
    zp text,
    zp_nom text,
    passetc int,
    tper int,
    mobil int
);

select addgeometrycolumn('od', 'origin', :srid, 'point', 2);
select addgeometrycolumn('od', 'destination', :srid, 'point', 2);

drop table if exists od_step cascade;
create table od_step (
    od_step_id serial primary key,
    od_id int references od,
    type text,
    action text,
    geojson json,
    stopid int,
    tripid int,
    routeid int,
    agencyid int,
    stopcode text,
    stopname text,
    agencyname text,
    departuretime text,
    readytoboardat text,
    distance_meters int,
    traveltimeminutes int,
    traveltimeseconds int,
    arrivaltime text,
    routetypeid int,
    agencyacronym text,
    routelongname text,
    routetypename text,
    routeshortname text,
    sequenceintrip int,
    -- stopcoordinates
    waitingtimeminutes int,
    waitingtimeseconds int,
    departuretimeseconds int,
    arrivaltimeseconds int,
    invehicletimeminutes int,
    invehicletimeseconds int
);

select addgeometrycolumn('od_step', 'stopcoordinates', :srid, 'point', 2);
select addgeometrycolumn('od_step', 'geom', :srid, 'linestring', 2);
